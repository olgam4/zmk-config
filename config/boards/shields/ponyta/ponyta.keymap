/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#pragma once

#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "key-labels/36.h"

#include "unicode-chars/base.h"
#include "unicode-chars/currency.dtsi"
#include "unicode-chars/french.dtsi"
#include "unicode-chars/spanish.dtsi"
#include "unicode-chars/greek.dtsi"
#include "unicode-chars/symbols.dtsi"

#define DEF 0
#define NUM 1
#define SYM 2
#define FRA 3
#define NAV 4
#define CHORD 5
#define CHORDFR 6

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2     

#define QUICK_TAP_MS 175 // 10500/wpm

#define AS(keycode) &as LS(keycode) keycode

&num_word {  // num-word, requires PR #1451
    layers = <NUM>;
    continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
};

&sl {
  ignore-modifiers;
};

#define SMART_NUM &smart_num NUM 0
#define ENTER_SHIFT &enter_shift LSHIFT RET
#define SPACE_NAV &space_nav NAV SPACE
#define ESC_CHORD &esc_chord CHORD ESC

/ {
    macros {
        all: all {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp A>
                , <&macro_release &kp LGUI>
                ;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                ;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp C>
                , <&macro_release &kp LGUI>
                ;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp V>
                , <&macro_release &kp LGUI>
                ;
        };
        email: email {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp O &kp L &kp I &kp V &kp I &kp E &kp R>
                , <&macro_tap &kp AT>
                , <&macro_tap &kp G &kp L &kp O>
                , <&macro_tap &kp DOT>
                , <&macro_tap &kp Q &kp U &kp E &kp B &kp E &kp C>
                ;
        };
        sleep: sleep {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LCTRL>
                , <&macro_tap &kp Q>
                , <&macro_release &kp LGUI &kp LCTRL>
                ;
        };
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHFT &kp N4>
                , <&macro_release &kp LGUI &kp LSHFT &kp N4>
                ;
        };
        record: record {
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHFT &kp N5>
                , <&macro_release &kp LGUI &kp LSHFT &kp N5>
                ;
        };
        m_the: m_the {
            compatible = "zmk,behavior-macro";
            wait-ms = <10>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp SPACE>;
        };
    };
    combos {
        compatible = "zmk,combos";
          combo_m_the {
            timeout-ms = <200>;
            key-positions = <RM1>;
            bindings = <&m_the>;
            layers = <CHORD>;
          };
    };
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        bs_del: bs_del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        com_semi: com_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&comma_inner>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma_inner: comma_inner {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp LESS_THAN>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        dot_col: dot_col {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&dot_inner>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_inner: dot_inner {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp GREATER_THAN>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        q_scream: q_scream {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;  
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;     
        };
        enter_shift: enter_shift {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;
        };
        smart_num: smart_num {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&num_word>;
        };
        space_nav: space_nav {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
        };
        esc_chord: esc_chord {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
        };
    };
    keymap {
            compatible = "zmk,keymap";
            default {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SQT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &hml LGUI A   &hml LALT R   &hml LCTRL S  &hml LSHFT T  &kp G             &kp M         &hmr RSHFT N  &hmr RCTRL E  &hmr RALT I   &hmr RGUI O
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &com_semi     &dot_col       &q_scream
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                      SMART_NUM     ENTER_SHIFT    ESC_CHORD          SPACE_NAV     &sl SYM       &bs_del
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
            numbers {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &hml LGUI A   &hml LALT R   &hml LCTRL S  &hml LSHFT T  &kp PRCNT         &kp DLLR      &hmr RSHFT N  &hmr RCTRL E  &hmr RALT I   &hmr RGUI O
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &com_semi     &dot_col       &q_scream
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                      &kp RET       ENTER_SHIFT    ESC_CHORD           SPACE_NAV     &sl SYM       &bs_del
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
            symbols {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp CARET     &kp AMPS      &kp LPAR      &kp RPAR      &kp STAR          &kp DLLR      &kp HASH      &kp PRCNT     &kp FSLH      &kp LS(N2)
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &kp BSLH          &kp GRAVE      &kp LS(GRAVE)  &kp LESS_THAN &kp GREATER_THAN &yh
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp UNDER     &kp PLUS      &kp LBRC      &kp RBRC      &kp PIPE            &danc         &stars        &eyes          &usds        &es_punc
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                      &kp CAPS       &sleep        &none             &none        &sl FRA       &bs_del
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
            francais {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &fr_a_circumflex &none         &none         &none         &none             &none      &fr_u_circumflex &fr_e_circumflex &fr_i_circumflex &fr_o_circumflex
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &fr_a_grave      &none         &none         &sk LSHFT     &none             &none       &fr_u_grave  &fr_e_grave  &fr_i_diaeresis   &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &none         &none         &fr_c_cedilla &none         &humf             &pray       &es_n_tilde  &fr_e_acute  &fr_e_diaeresis   &fr_oe
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                         &none         &none         &none             &none         &none         &bs_del
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
            navigation {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &none         &kp BSPC       &kp UP         &kp DEL         &none           &none     &kp C_BRI_DN    &kp C_BRI_UP   &kp K_VOL_DN &kp K_VOL_UP
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &kp LEFT      &kp DOWN         &kp RIGHT    &none             &none       &kp LCTRL     &kp LGUI         &none       &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &all         &cut          &copy          &paste        &none             &none         &kp TAB      &kp LS(TAB)     &bt BT_CLR      &none
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                         &record     &kp RET    &screenshot         &none         &none         &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
            chord {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &none         &none           &none         &none         &none                 &none       &none        &none          &none        &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none          &none      &none         &none            &none             &none         &none          &none         &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none         &none         &none         &none         &none               &none         &none         &none         &none         &none
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                         &none     &none                 &none       &mo CHORDFR     &none         &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
            chordfr {
                    bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &none         &none           &none         &none         &none                 &none       &none        &none          &none        &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none          &none      &none         &none            &none             &none         &none          &none         &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none         &none         &none         &none         &none               &none         &none         &none         &none         &none
     // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴-────────────╯
                                         &none     &none                 &none         &none          &none         &none
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                    >;
            };
    };
};
